/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package progettose;

import static java.awt.Color.black;
import java.awt.Desktop;
import java.awt.event.WindowEvent;
import java.io.IOException;
import java.util.List;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.DefaultListModel;
import javax.swing.DefaultListSelectionModel;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.ERROR_MESSAGE;
import static javax.swing.JOptionPane.INFORMATION_MESSAGE;
import javax.swing.table.DefaultTableModel;
import java.util.Calendar;
import java.util.TimeZone;
import java.util.Date;
import java.time.DayOfWeek;
import java.time.LocalDate;
import java.time.ZonedDateTime;
import java.time.temporal.IsoFields;
import java.time.temporal.TemporalField;

/**
 *
 * @author Daniele
 */
public class InterfacciaGrafica extends javax.swing.JFrame {

    private final DefaultTableModel tb = new DefaultTableModel() {
        @Override
        public boolean isCellEditable(int row, int column) {
            //all cells false
            return false;
        }
    };

    private final DefaultTableModel tb3 = new DefaultTableModel() {
        @Override
        public boolean isCellEditable(int row, int column) {
            return false;
        }
    };

    private final DefaultTableModel tb2 = new DefaultTableModel() {
        @Override
        public boolean isCellEditable(int row, int column) {
            return false;
        }
    };
    
   

    String tipo = "";
    String interrompibile = "";
    DefaultListModel listModel = new DefaultListModel();
    DefaultListModel listModelVis = new DefaultListModel();
    DefaultListModel listModelComp = new DefaultListModel();
    DefaultListModel listModelSkills = new DefaultListModel();
    DefaultListModel listModelSkillsEwo = new DefaultListModel();
                LocalDate date = LocalDate.now();
            String giorno = String.valueOf(date.getDayOfWeek());

    Planner p;
    List<String> materiali = new ArrayList<>();
    int id;

    /**
     * Creates new form InterfacciaGrafica
     */
    public InterfacciaGrafica() {
        try {
            p = new Planner("alessio", "12345");
        } catch (SQLException ex) {
            Logger.getLogger(InterfacciaGrafica.class.getName()).log(Level.SEVERE, null, ex);
        }
        initComponents();
        togliBordi();

        for (String m : p.getAllMaterials()) {
            tendinaMateriali.addItem(m);

        }
        GestioneAttività.setResizable(false);
        creazioneAttività.setResizable(false);
        assegnaAttività.setResizable(false);
        assegnaAttività2.setResizable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        GestioneAttività = new javax.swing.JFrame();
        panelCopertura = new javax.swing.JPanel();
        panelCopertura2 = new javax.swing.JPanel();
        buttonCreaAttività = new javax.swing.JButton();
        buttonMostraAttività = new javax.swing.JButton();
        buttonCancellaAttività = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tabellaAttività = new javax.swing.JTable();
        jScrollPane7 = new javax.swing.JScrollPane();
        textAreaWorkspaceNotesVis = new javax.swing.JTextArea();
        jScrollPane8 = new javax.swing.JScrollPane();
        listaMaterialiVis = new javax.swing.JList<>();
        jScrollPane4 = new javax.swing.JScrollPane();
        listaCompetenze = new javax.swing.JList<>();
        jScrollPane5 = new javax.swing.JScrollPane();
        textAreaDescrizioneAttivitàVis = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        buttonModificaAttività = new javax.swing.JButton();
        buttonAssegna = new javax.swing.JButton();
        labelDE = new javax.swing.JLabel();
        buttonSMP = new javax.swing.JButton();
        labelCO = new javax.swing.JLabel();
        labelWO = new javax.swing.JLabel();
        labelML = new javax.swing.JLabel();
        creazioneAttività = new javax.swing.JFrame();
        panelDX = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        textAreaDescrizioneAttività = new javax.swing.JTextArea();
        buttonCrea = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        textAreaWorkspace = new javax.swing.JTextArea();
        jScrollPane1 = new javax.swing.JScrollPane();
        listaMateriali = new javax.swing.JList<>();
        buttonRimuoviMateriale = new javax.swing.JButton();
        panelSX = new javax.swing.JPanel();
        labelID = new javax.swing.JLabel();
        fieldID = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        fieldFactorySite = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        fieldArea = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        tendinaTipologia = new javax.swing.JComboBox<>();
        labelTipologiaOra = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        fieldTime = new javax.swing.JTextField();
        labelWeek = new javax.swing.JLabel();
        fieldWeek = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        tendinaInterrompibile = new javax.swing.JComboBox<>();
        labelInterrompibileOra = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        tendinaMateriali = new javax.swing.JComboBox<>();
        buttonAggiungiMateriale = new javax.swing.JButton();
        labelAttivitàOra = new javax.swing.JLabel();
        tendinaTipoAttività = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        labelDay = new javax.swing.JLabel();
        fieldDay = new javax.swing.JTextField();
        assegnaAttività = new javax.swing.JFrame();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        textWeekAssegnata = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        textAttivitàDaAssegnare = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jScrollPane10 = new javax.swing.JScrollPane();
        tabellaDisponibilità = new javax.swing.JTable();
        jScrollPane11 = new javax.swing.JScrollPane();
        listaSkills = new javax.swing.JList<>();
        jButtonAssegnaAttività2 = new javax.swing.JButton();
        assegnaAttività2 = new javax.swing.JFrame();
        jPanel3 = new javax.swing.JPanel();
        labelWeekDisp = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jTextFieldActivityToAssign2 = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jScrollPane9 = new javax.swing.JScrollPane();
        textAreaWorkspaceNotes2 = new javax.swing.JTextArea();
        jScrollPane12 = new javax.swing.JScrollPane();
        tabellaDisponibilità2 = new javax.swing.JTable();
        labelDisponibilità = new javax.swing.JLabel();
        labelDayDisp = new javax.swing.JLabel();
        buttonForward = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        attivitàEWO = new javax.swing.JFrame();
        jPanel5 = new javax.swing.JPanel();
        jLabelWeek2 = new javax.swing.JLabel();
        jLabelDay2 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        textFieldActivityToAssign2 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane13 = new javax.swing.JScrollPane();
        jTextAreaWorkspacenotesewo = new javax.swing.JTextArea();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane14 = new javax.swing.JScrollPane();
        jTextAreaDescriptionewo = new javax.swing.JTextArea();
        jLabel22 = new javax.swing.JLabel();
        textFieldEstimatedtimeewo = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        jScrollPane15 = new javax.swing.JScrollPane();
        jListSkillsneededewo = new javax.swing.JList<>();
        jButtonConfermaewo = new javax.swing.JButton();
        aggiungiSkill = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        buttonGestManut = new javax.swing.JButton();

        GestioneAttività.setTitle("MENU' GESTIONE ATTIVITA'");
        GestioneAttività.setMinimumSize(new java.awt.Dimension(1246, 650));
        GestioneAttività.setResizable(false);
        GestioneAttività.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                GestioneAttivitàWindowClosing(evt);
            }
        });
        GestioneAttività.getContentPane().setLayout(null);

        panelCopertura.setBackground(new java.awt.Color(0, 102, 102));

        javax.swing.GroupLayout panelCoperturaLayout = new javax.swing.GroupLayout(panelCopertura);
        panelCopertura.setLayout(panelCoperturaLayout);
        panelCoperturaLayout.setHorizontalGroup(
            panelCoperturaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 850, Short.MAX_VALUE)
        );
        panelCoperturaLayout.setVerticalGroup(
            panelCoperturaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 280, Short.MAX_VALUE)
        );

        GestioneAttività.getContentPane().add(panelCopertura);
        panelCopertura.setBounds(340, 20, 850, 280);

        panelCopertura2.setBackground(new java.awt.Color(0, 102, 102));

        javax.swing.GroupLayout panelCopertura2Layout = new javax.swing.GroupLayout(panelCopertura2);
        panelCopertura2.setLayout(panelCopertura2Layout);
        panelCopertura2Layout.setHorizontalGroup(
            panelCopertura2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1060, Short.MAX_VALUE)
        );
        panelCopertura2Layout.setVerticalGroup(
            panelCopertura2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 240, Short.MAX_VALUE)
        );

        GestioneAttività.getContentPane().add(panelCopertura2);
        panelCopertura2.setBounds(0, 370, 1060, 240);

        buttonCreaAttività.setText("Crea attività");
        buttonCreaAttività.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCreaAttivitàActionPerformed(evt);
            }
        });
        GestioneAttività.getContentPane().add(buttonCreaAttività);
        buttonCreaAttività.setBounds(50, 40, 240, 40);

        buttonMostraAttività.setText("Mostra elenco attività");
        buttonMostraAttività.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonMostraAttivitàActionPerformed(evt);
            }
        });
        GestioneAttività.getContentPane().add(buttonMostraAttività);
        buttonMostraAttività.setBounds(50, 90, 240, 40);

        buttonCancellaAttività.setText("Cancella attività");
        buttonCancellaAttività.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCancellaAttivitàActionPerformed(evt);
            }
        });
        GestioneAttività.getContentPane().add(buttonCancellaAttività);
        buttonCancellaAttività.setBounds(50, 140, 240, 40);

        tabellaAttività.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tabellaAttività.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tabellaAttività.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        tabellaAttività.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tabellaAttività.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabellaAttivitàMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tabellaAttività);

        GestioneAttività.getContentPane().add(jScrollPane3);
        jScrollPane3.setBounds(400, 30, 760, 250);

        textAreaWorkspaceNotesVis.setEditable(false);
        textAreaWorkspaceNotesVis.setColumns(20);
        textAreaWorkspaceNotesVis.setRows(5);
        textAreaWorkspaceNotesVis.setBorder(null);
        jScrollPane7.setViewportView(textAreaWorkspaceNotesVis);

        GestioneAttività.getContentPane().add(jScrollPane7);
        jScrollPane7.setBounds(280, 450, 270, 150);

        jScrollPane8.setViewportView(listaMaterialiVis);

        GestioneAttività.getContentPane().add(jScrollPane8);
        jScrollPane8.setBounds(560, 450, 240, 150);

        jScrollPane4.setViewportView(listaCompetenze);

        GestioneAttività.getContentPane().add(jScrollPane4);
        jScrollPane4.setBounds(810, 450, 240, 150);

        textAreaDescrizioneAttivitàVis.setEditable(false);
        textAreaDescrizioneAttivitàVis.setColumns(20);
        textAreaDescrizioneAttivitàVis.setRows(5);
        textAreaDescrizioneAttivitàVis.setBorder(null);
        textAreaDescrizioneAttivitàVis.setDisabledTextColor(new java.awt.Color(102, 102, 255));
        textAreaDescrizioneAttivitàVis.setSelectionColor(new java.awt.Color(153, 153, 153));
        jScrollPane5.setViewportView(textAreaDescrizioneAttivitàVis);

        GestioneAttività.getContentPane().add(jScrollPane5);
        jScrollPane5.setBounds(0, 450, 270, 150);

        jPanel1.setBackground(new java.awt.Color(0, 102, 102));
        jPanel1.setMinimumSize(new java.awt.Dimension(1400, 650));
        jPanel1.setLayout(null);

        buttonModificaAttività.setText("Modifica attività");
        buttonModificaAttività.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonModificaAttivitàActionPerformed(evt);
            }
        });
        jPanel1.add(buttonModificaAttività);
        buttonModificaAttività.setBounds(50, 190, 240, 40);

        buttonAssegna.setText("Assegna attività");
        buttonAssegna.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAssegnaActionPerformed(evt);
            }
        });
        jPanel1.add(buttonAssegna);
        buttonAssegna.setBounds(50, 240, 240, 40);

        labelDE.setBackground(new java.awt.Color(153, 204, 255));
        labelDE.setFont(new java.awt.Font("Britannic Bold", 0, 24)); // NOI18N
        labelDE.setForeground(new java.awt.Color(0, 0, 102));
        labelDE.setText("         DESCRIPTION");
        labelDE.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 102), 2));
        labelDE.setOpaque(true);
        jPanel1.add(labelDE);
        labelDE.setBounds(0, 420, 270, 30);

        buttonSMP.setText("Mostra SMP");
        buttonSMP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSMPActionPerformed(evt);
            }
        });
        jPanel1.add(buttonSMP);
        buttonSMP.setBounds(70, 380, 120, 30);

        labelCO.setBackground(new java.awt.Color(153, 204, 255));
        labelCO.setFont(new java.awt.Font("Britannic Bold", 0, 24)); // NOI18N
        labelCO.setForeground(new java.awt.Color(0, 0, 102));
        labelCO.setText("     NEEDED SKILLS");
        labelCO.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 102), 2));
        labelCO.setOpaque(true);
        jPanel1.add(labelCO);
        labelCO.setBounds(810, 420, 240, 30);

        labelWO.setBackground(new java.awt.Color(153, 204, 255));
        labelWO.setFont(new java.awt.Font("Britannic Bold", 0, 24)); // NOI18N
        labelWO.setForeground(new java.awt.Color(0, 0, 102));
        labelWO.setText("    WORKSPACE NOTES ");
        labelWO.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 102), 2));
        labelWO.setOpaque(true);
        jPanel1.add(labelWO);
        labelWO.setBounds(280, 420, 270, 30);

        labelML.setBackground(new java.awt.Color(153, 204, 255));
        labelML.setFont(new java.awt.Font("Britannic Bold", 0, 24)); // NOI18N
        labelML.setForeground(new java.awt.Color(0, 0, 102));
        labelML.setText("      MATERIALI LIST");
        labelML.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 102), 2));
        labelML.setOpaque(true);
        jPanel1.add(labelML);
        labelML.setBounds(560, 420, 240, 30);

        GestioneAttività.getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 0, 1230, 610);

        creazioneAttività.setMinimumSize(new java.awt.Dimension(1248, 573));
        creazioneAttività.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                creazioneAttivitàWindowClosing(evt);
            }
        });
        creazioneAttività.getContentPane().setLayout(null);

        panelDX.setBackground(new java.awt.Color(0, 153, 153));
        panelDX.setLayout(null);

        jLabel12.setBackground(new java.awt.Color(255, 255, 204));
        jLabel12.setFont(new java.awt.Font("Britannic Bold", 0, 24)); // NOI18N
        jLabel12.setText("ACTIVITY DESCRIPTION");
        jLabel12.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jLabel12.setOpaque(true);
        panelDX.add(jLabel12);
        jLabel12.setBounds(80, 40, 250, 30);

        jLabel19.setBackground(new java.awt.Color(255, 255, 204));
        jLabel19.setFont(new java.awt.Font("Britannic Bold", 0, 24)); // NOI18N
        jLabel19.setText("      MATERIAL LIST");
        jLabel19.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jLabel19.setOpaque(true);
        panelDX.add(jLabel19);
        jLabel19.setBounds(80, 270, 240, 30);

        jLabel20.setBackground(new java.awt.Color(255, 255, 204));
        jLabel20.setFont(new java.awt.Font("Britannic Bold", 0, 24)); // NOI18N
        jLabel20.setText("  WORKSPACE NOTES");
        jLabel20.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jLabel20.setOpaque(true);
        panelDX.add(jLabel20);
        jLabel20.setBounds(390, 40, 250, 30);

        textAreaDescrizioneAttività.setColumns(20);
        textAreaDescrizioneAttività.setRows(5);
        jScrollPane6.setViewportView(textAreaDescrizioneAttività);

        panelDX.add(jScrollPane6);
        jScrollPane6.setBounds(80, 70, 250, 140);

        buttonCrea.setFont(new java.awt.Font("Dubai Medium", 0, 14)); // NOI18N
        buttonCrea.setText("ATTIVITA'");
        buttonCrea.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCreaActionPerformed(evt);
            }
        });
        panelDX.add(buttonCrea);
        buttonCrea.setBounds(400, 320, 250, 81);

        textAreaWorkspace.setColumns(20);
        textAreaWorkspace.setRows(5);
        jScrollPane2.setViewportView(textAreaWorkspace);

        panelDX.add(jScrollPane2);
        jScrollPane2.setBounds(390, 70, 250, 140);

        jScrollPane1.setViewportView(listaMateriali);

        panelDX.add(jScrollPane1);
        jScrollPane1.setBounds(80, 300, 240, 130);

        buttonRimuoviMateriale.setFont(new java.awt.Font("Dubai Medium", 0, 14)); // NOI18N
        buttonRimuoviMateriale.setText("Rimuovi");
        buttonRimuoviMateriale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonRimuoviMaterialeActionPerformed(evt);
            }
        });
        panelDX.add(buttonRimuoviMateriale);
        buttonRimuoviMateriale.setBounds(150, 440, 90, 30);

        creazioneAttività.getContentPane().add(panelDX);
        panelDX.setBounds(420, 0, 960, 570);

        panelSX.setBackground(new java.awt.Color(255, 255, 204));
        panelSX.setLayout(null);

        labelID.setFont(new java.awt.Font("Dubai Medium", 0, 18)); // NOI18N
        labelID.setText("Activity ID");
        panelSX.add(labelID);
        labelID.setBounds(50, 90, 90, 20);

        fieldID.setFont(new java.awt.Font("Dubai Medium", 0, 14)); // NOI18N
        fieldID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldIDActionPerformed(evt);
            }
        });
        panelSX.add(fieldID);
        fieldID.setBounds(180, 80, 90, 30);

        jLabel3.setFont(new java.awt.Font("Dubai Medium", 0, 18)); // NOI18N
        jLabel3.setText("Factory site");
        panelSX.add(jLabel3);
        jLabel3.setBounds(50, 130, 100, 20);

        fieldFactorySite.setFont(new java.awt.Font("Dubai Medium", 0, 14)); // NOI18N
        fieldFactorySite.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldFactorySiteActionPerformed(evt);
            }
        });
        panelSX.add(fieldFactorySite);
        fieldFactorySite.setBounds(180, 120, 90, 30);

        jLabel4.setFont(new java.awt.Font("Dubai", 0, 18)); // NOI18N
        jLabel4.setText("Area");
        panelSX.add(jLabel4);
        jLabel4.setBounds(50, 170, 60, 20);

        fieldArea.setFont(new java.awt.Font("Dubai Medium", 0, 14)); // NOI18N
        panelSX.add(fieldArea);
        fieldArea.setBounds(180, 160, 90, 30);

        jLabel5.setFont(new java.awt.Font("Dubai Medium", 0, 18)); // NOI18N
        jLabel5.setText("Typology");
        panelSX.add(jLabel5);
        jLabel5.setBounds(50, 210, 80, 20);

        tendinaTipologia.setFont(new java.awt.Font("Dubai Medium", 0, 14)); // NOI18N
        tendinaTipologia.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Electrical", "Electronic", "Hydraulic", "Mechanical" }));
        panelSX.add(tendinaTipologia);
        tendinaTipologia.setBounds(180, 200, 90, 30);

        labelTipologiaOra.setFont(new java.awt.Font("Dubai Medium", 0, 18)); // NOI18N
        labelTipologiaOra.setText("(Now is");
        panelSX.add(labelTipologiaOra);
        labelTipologiaOra.setBounds(290, 200, 200, 30);

        jLabel7.setFont(new java.awt.Font("Dubai Medium", 0, 18)); // NOI18N
        jLabel7.setText("Time");
        panelSX.add(jLabel7);
        jLabel7.setBounds(50, 250, 60, 20);

        fieldTime.setFont(new java.awt.Font("Dubai Medium", 0, 14)); // NOI18N
        fieldTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldTimeActionPerformed(evt);
            }
        });
        panelSX.add(fieldTime);
        fieldTime.setBounds(180, 240, 90, 30);

        labelWeek.setFont(new java.awt.Font("Dubai Medium", 0, 18)); // NOI18N
        labelWeek.setText("Week");
        panelSX.add(labelWeek);
        labelWeek.setBounds(50, 280, 60, 32);

        fieldWeek.setFont(new java.awt.Font("Dubai Medium", 0, 14)); // NOI18N
        panelSX.add(fieldWeek);
        fieldWeek.setBounds(180, 280, 90, 30);

        jLabel8.setFont(new java.awt.Font("Dubai Medium", 0, 18)); // NOI18N
        jLabel8.setText("Interruptible");
        panelSX.add(jLabel8);
        jLabel8.setBounds(50, 320, 110, 30);

        tendinaInterrompibile.setFont(new java.awt.Font("Dubai Medium", 0, 14)); // NOI18N
        tendinaInterrompibile.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Si", "No" }));
        panelSX.add(tendinaInterrompibile);
        tendinaInterrompibile.setBounds(180, 320, 90, 30);

        labelInterrompibileOra.setFont(new java.awt.Font("Dubai Medium", 0, 18)); // NOI18N
        labelInterrompibileOra.setText("(Now is");
        panelSX.add(labelInterrompibileOra);
        labelInterrompibileOra.setBounds(290, 320, 210, 30);

        jLabel9.setFont(new java.awt.Font("Dubai Medium", 0, 18)); // NOI18N
        jLabel9.setText("Materials");
        panelSX.add(jLabel9);
        jLabel9.setBounds(50, 380, 90, 20);

        tendinaMateriali.setFont(new java.awt.Font("Dubai Medium", 0, 14)); // NOI18N
        panelSX.add(tendinaMateriali);
        tendinaMateriali.setBounds(180, 370, 90, 30);

        buttonAggiungiMateriale.setFont(new java.awt.Font("Dubai Medium", 0, 14)); // NOI18N
        buttonAggiungiMateriale.setText("Aggiungi");
        buttonAggiungiMateriale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAggiungiMaterialeActionPerformed(evt);
            }
        });
        panelSX.add(buttonAggiungiMateriale);
        buttonAggiungiMateriale.setBounds(290, 370, 82, 30);

        labelAttivitàOra.setFont(new java.awt.Font("Dubai Medium", 0, 18)); // NOI18N
        labelAttivitàOra.setText("(Now is");
        panelSX.add(labelAttivitàOra);
        labelAttivitàOra.setBounds(290, 40, 170, 30);

        tendinaTipoAttività.setFont(new java.awt.Font("Dubai Medium", 0, 14)); // NOI18N
        tendinaTipoAttività.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Planned", "EWO", "Extra" }));
        tendinaTipoAttività.setToolTipText("");
        tendinaTipoAttività.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                tendinaTipoAttivitàItemStateChanged(evt);
            }
        });
        panelSX.add(tendinaTipoAttività);
        tendinaTipoAttività.setBounds(180, 40, 89, 30);

        jLabel1.setFont(new java.awt.Font("Dubai Medium", 0, 18)); // NOI18N
        jLabel1.setText("Tipo di attività");
        panelSX.add(jLabel1);
        jLabel1.setBounds(50, 40, 130, 30);

        labelDay.setFont(new java.awt.Font("Dubai Medium", 0, 18)); // NOI18N
        labelDay.setText("Day");
        labelDay.setEnabled(false);
        panelSX.add(labelDay);
        labelDay.setBounds(290, 284, 50, 30);

        fieldDay.setFont(new java.awt.Font("Dubai Medium", 0, 14)); // NOI18N
        fieldDay.setEnabled(false);
        panelSX.add(fieldDay);
        fieldDay.setBounds(340, 280, 90, 30);

        creazioneAttività.getContentPane().add(panelSX);
        panelSX.setBounds(-30, 0, 530, 580);

        assegnaAttività.setMinimumSize(new java.awt.Dimension(1058, 350));
        assegnaAttività.getContentPane().setLayout(null);

        jPanel2.setBackground(new java.awt.Color(204, 102, 0));
        jPanel2.setMinimumSize(new java.awt.Dimension(1058, 350));
        jPanel2.setLayout(null);

        jLabel2.setBackground(new java.awt.Color(255, 255, 102));
        jLabel2.setFont(new java.awt.Font("Britannic Bold", 0, 24)); // NOI18N
        jLabel2.setText("WEEK");
        jLabel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jLabel2.setOpaque(true);
        jPanel2.add(jLabel2);
        jLabel2.setBounds(40, 10, 80, 30);

        textWeekAssegnata.setEditable(false);
        textWeekAssegnata.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textWeekAssegnataActionPerformed(evt);
            }
        });
        jPanel2.add(textWeekAssegnata);
        textWeekAssegnata.setBounds(130, 10, 54, 30);

        jLabel13.setBackground(new java.awt.Color(255, 255, 102));
        jLabel13.setFont(new java.awt.Font("Britannic Bold", 0, 24)); // NOI18N
        jLabel13.setText("ACTIVITY TO ASSIGN");
        jLabel13.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jLabel13.setOpaque(true);
        jPanel2.add(jLabel13);
        jLabel13.setBounds(310, 10, 270, 40);

        textAttivitàDaAssegnare.setEditable(false);
        textAttivitàDaAssegnare.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textAttivitàDaAssegnareActionPerformed(evt);
            }
        });
        jPanel2.add(textAttivitàDaAssegnare);
        textAttivitàDaAssegnare.setBounds(590, 10, 420, 40);

        jLabel15.setBackground(new java.awt.Color(255, 255, 102));
        jLabel15.setFont(new java.awt.Font("Britannic Bold", 0, 24)); // NOI18N
        jLabel15.setText("   SKILLS NEEDED");
        jLabel15.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jLabel15.setOpaque(true);
        jPanel2.add(jLabel15);
        jLabel15.setBounds(10, 100, 230, 28);

        jLabel16.setBackground(new java.awt.Color(255, 255, 102));
        jLabel16.setFont(new java.awt.Font("Britannic Bold", 0, 24)); // NOI18N
        jLabel16.setText("                               MAINTAINER AVAILABILITY");
        jLabel16.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jLabel16.setOpaque(true);
        jPanel2.add(jLabel16);
        jLabel16.setBounds(310, 90, 700, 30);

        tabellaDisponibilità.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tabellaDisponibilità.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabellaDisponibilitàMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tabellaDisponibilitàMouseReleased(evt);
            }
        });
        jScrollPane10.setViewportView(tabellaDisponibilità);

        jPanel2.add(jScrollPane10);
        jScrollPane10.setBounds(307, 123, 700, 190);

        jScrollPane11.setViewportView(listaSkills);

        jPanel2.add(jScrollPane11);
        jScrollPane11.setBounds(10, 125, 229, 188);

        jButtonAssegnaAttività2.setText("ASSEGNA");
        jButtonAssegnaAttività2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAssegnaAttività2ActionPerformed(evt);
            }
        });
        jPanel2.add(jButtonAssegnaAttività2);
        jButtonAssegnaAttività2.setBounds(40, 50, 171, 40);

        assegnaAttività.getContentPane().add(jPanel2);
        jPanel2.setBounds(-4, 0, 1060, 350);

        assegnaAttività2.setMinimumSize(new java.awt.Dimension(1233, 428));
        assegnaAttività2.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                assegnaAttività2WindowClosing(evt);
            }
        });
        assegnaAttività2.getContentPane().setLayout(null);

        jPanel3.setBackground(new java.awt.Color(204, 102, 0));
        jPanel3.setMinimumSize(new java.awt.Dimension(1233, 428));
        jPanel3.setLayout(null);

        labelWeekDisp.setBackground(new java.awt.Color(255, 255, 102));
        labelWeekDisp.setFont(new java.awt.Font("Britannic Bold", 0, 24)); // NOI18N
        labelWeekDisp.setText("WEEK:");
        labelWeekDisp.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        labelWeekDisp.setOpaque(true);
        jPanel3.add(labelWeekDisp);
        labelWeekDisp.setBounds(10, 13, 220, 26);

        jLabel17.setBackground(new java.awt.Color(255, 255, 102));
        jLabel17.setFont(new java.awt.Font("Britannic Bold", 0, 24)); // NOI18N
        jLabel17.setText("Activity to assign");
        jLabel17.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        jLabel17.setOpaque(true);
        jPanel3.add(jLabel17);
        jLabel17.setBounds(240, 10, 230, 30);

        jTextFieldActivityToAssign2.setEditable(false);
        jPanel3.add(jTextFieldActivityToAssign2);
        jTextFieldActivityToAssign2.setBounds(480, 10, 334, 30);

        jLabel18.setBackground(new java.awt.Color(255, 255, 102));
        jLabel18.setFont(new java.awt.Font("Britannic Bold", 0, 24)); // NOI18N
        jLabel18.setText("Workspace Notes");
        jLabel18.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        jLabel18.setOpaque(true);
        jPanel3.add(jLabel18);
        jLabel18.setBounds(10, 120, 220, 30);

        textAreaWorkspaceNotes2.setColumns(20);
        textAreaWorkspaceNotes2.setRows(5);
        jScrollPane9.setViewportView(textAreaWorkspaceNotes2);

        jPanel3.add(jScrollPane9);
        jScrollPane9.setBounds(10, 150, 222, 166);

        tabellaDisponibilità2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane12.setViewportView(tabellaDisponibilità2);

        jPanel3.add(jScrollPane12);
        jScrollPane12.setBounds(239, 150, 937, 166);

        labelDisponibilità.setBackground(new java.awt.Color(255, 255, 102));
        labelDisponibilità.setFont(new java.awt.Font("Britannic Bold", 0, 24)); // NOI18N
        labelDisponibilità.setText("                           AVAILABILITY OF ");
        labelDisponibilità.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        labelDisponibilità.setOpaque(true);
        jPanel3.add(labelDisponibilità);
        labelDisponibilità.setBounds(240, 120, 937, 30);

        labelDayDisp.setBackground(new java.awt.Color(255, 255, 102));
        labelDayDisp.setFont(new java.awt.Font("Britannic Bold", 0, 24)); // NOI18N
        labelDayDisp.setText("DAY:");
        labelDayDisp.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        labelDayDisp.setOpaque(true);
        jPanel3.add(labelDayDisp);
        labelDayDisp.setBounds(10, 63, 220, 30);

        buttonForward.setText("FORWARD");
        buttonForward.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonForwardActionPerformed(evt);
            }
        });
        jPanel3.add(buttonForward);
        buttonForward.setBounds(590, 50, 128, 37);

        assegnaAttività2.getContentPane().add(jPanel3);
        jPanel3.setBounds(0, 0, 1233, 428);

        jLabel14.setFont(new java.awt.Font("Britannic Bold", 0, 24)); // NOI18N
        jLabel14.setText("      MATERIAL LIST");
        jLabel14.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jLabel14.setOpaque(true);

        attivitàEWO.setMinimumSize(new java.awt.Dimension(837, 400));

        jPanel5.setBackground(new java.awt.Color(255, 102, 0));

        jLabelWeek2.setText("WEEK N°");

        jLabelDay2.setText("DAY");

        jLabel21.setText("Activity to assign");

        textFieldActivityToAssign2.setEditable(false);

        jLabel6.setText("WORKSPACE NOTES");

        jTextAreaWorkspacenotesewo.setColumns(20);
        jTextAreaWorkspacenotesewo.setRows(5);
        jScrollPane13.setViewportView(jTextAreaWorkspacenotesewo);

        jLabel11.setText("INTERVENT DESCRIPTION");

        jTextAreaDescriptionewo.setColumns(20);
        jTextAreaDescriptionewo.setRows(5);
        jScrollPane14.setViewportView(jTextAreaDescriptionewo);

        jLabel22.setText("ESTIMATED TIME");

        jLabel23.setText("SKILLS NEEDED");

        jScrollPane15.setViewportView(jListSkillsneededewo);

        jButtonConfermaewo.setText("CONFERMA");
        jButtonConfermaewo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonConfermaewoActionPerformed(evt);
            }
        });

        aggiungiSkill.setText("AGGIUNGI SKILL");
        aggiungiSkill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aggiungiSkillActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(75, 75, 75)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel21)
                                .addGap(52, 52, 52)
                                .addComponent(textFieldActivityToAssign2, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(51, 51, 51)
                                .addComponent(jButtonConfermaewo, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addGroup(jPanel5Layout.createSequentialGroup()
                                            .addComponent(jLabel22)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(textFieldEstimatedtimeewo, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(jScrollPane14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(92, 92, 92)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane15, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(aggiungiSkill, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabelWeek2, javax.swing.GroupLayout.DEFAULT_SIZE, 102, Short.MAX_VALUE)
                        .addComponent(jLabelDay2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(50, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelWeek2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textFieldActivityToAssign2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonConfermaewo, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabelDay2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jScrollPane14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(23, 23, 23)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel22)
                            .addComponent(textFieldEstimatedtimeewo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jScrollPane15, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(aggiungiSkill)))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout attivitàEWOLayout = new javax.swing.GroupLayout(attivitàEWO.getContentPane());
        attivitàEWO.getContentPane().setLayout(attivitàEWOLayout);
        attivitàEWOLayout.setHorizontalGroup(
            attivitàEWOLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        attivitàEWOLayout.setVerticalGroup(
            attivitàEWOLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("MENU' PRINCIPALE");
        setMinimumSize(new java.awt.Dimension(410, 210));
        setResizable(false);
        getContentPane().setLayout(null);

        jPanel4.setBackground(new java.awt.Color(102, 102, 255));

        buttonGestManut.setText("Gestione Manutenzione");
        buttonGestManut.setName(""); // NOI18N
        buttonGestManut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonGestManutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(113, 113, 113)
                .addComponent(buttonGestManut)
                .addContainerGap(152, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addComponent(buttonGestManut, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(109, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel4);
        jPanel4.setBounds(0, 0, 410, 210);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonGestManutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonGestManutActionPerformed

        GestioneAttività.setVisible(true);
        buttonModificaAttività.setVisible(false);
        buttonAssegna.setVisible(false);
        disattivaVis();
        fieldDay.setText(giorno);
    }//GEN-LAST:event_buttonGestManutActionPerformed

    private void buttonCreaAttivitàActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCreaAttivitàActionPerformed

        disabilitaDay();
        fieldWeek.setEnabled(true);
        labelTipologiaOra.setVisible(false);
        labelAttivitàOra.setVisible(false);
        labelInterrompibileOra.setVisible(false);
        fieldID.setEnabled(true);
        labelID.setEnabled(true);
        creazioneAttività.setVisible(true);
        buttonModificaAttività.setEnabled(false);
        labelTipologiaOra.setEnabled(false);
        labelAttivitàOra.setEnabled(false);
        labelInterrompibileOra.setEnabled(false);
        buttonCrea.setText("CREA ATTIVITA'");
        creazioneAttività.setTitle("Creazione Attività");
        //*String[] opzioni ={"Planned","EWO","Extra"};
        //* JOptionPane.showOptionDialog(null, "Scegli il tipo di attività da creare","Selezione tipo di attività", WIDTH, HEIGHT, null, opzioni, EXIT_ON_CLOSE);
        //* creazioneAttività.setVisible(true);

        // TODO add your handling code here:
    }//GEN-LAST:event_buttonCreaAttivitàActionPerformed

    private void fieldTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldTimeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldTimeActionPerformed

    private void buttonCreaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCreaActionPerformed

        if (fieldID.getText().equals("") || fieldFactorySite.getText().equals("") || fieldArea.getText().equals("")
                || textAreaDescrizioneAttività.getText().equals("")
                || fieldTime.getText().equals("") || fieldWeek.getText().equals("")) {
            mostraErrore("ERRORE", "ALCUNI CAMPI OBBLIGATORI NON SONO STATI COMPILATI");

        } else {
            Activity a = buildActivity(tendinaTipoAttività.getSelectedItem().toString());
            if (a == null) {
                mostraErrore("ERRORE", "Input non corretti!");
            } else if (buttonCrea.getText().equals("CREA ATTIVITA'")) {
                try {
                    p.createActivity(a);
                    svuota();
                    mostraSuccesso("ATTIVITA' CREATA", "Hai creato l'attività correttamente!");
                } catch (Exception ex) {
                    mostraErrore("ERRORE", ex.getMessage());
                }

            } else {
                a.setProcedure(p.getActivity(id).getProcedure());

                try {
                    p.modifyActivity(a);
                    mostraErrore("ERRORE", "ATTIVITA' NON MODIFICATA");

                    svuota();
                    mostraSuccesso("ATTIVITA' MODIFICATA", "Hai modificato l'attività correttamente");
                    creazioneAttività.dispatchEvent(new WindowEvent(creazioneAttività, WindowEvent.WINDOW_CLOSING));
                } catch (Exception ex) {
                    mostraErrore("ERRORE", ex.getMessage());
                }

            }
        }

    }//GEN-LAST:event_buttonCreaActionPerformed

    private void buttonAggiungiMaterialeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAggiungiMaterialeActionPerformed

        String materiale = tendinaMateriali.getSelectedItem().toString();
        materiali.add(materiale);
        if (listModel.contains(materiale) == false) {
            listModel.addElement(materiale);
        } else {
            mostraErrore("ERRORE", "Materiale già inserito");
        }

        listaMateriali.setModel(listModel);


    }//GEN-LAST:event_buttonAggiungiMaterialeActionPerformed

    private void fieldFactorySiteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldFactorySiteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldFactorySiteActionPerformed

    private void buttonCancellaAttivitàActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCancellaAttivitàActionPerformed

        String s = JOptionPane.showInputDialog(null, "Inserisci l'ID da cancellare");
        if (s == null) {
        } else if (s.isBlank()) {
            JOptionPane.showMessageDialog(null, "Campo ID vuoto", "ERRORE", ERROR_MESSAGE);
        } else {
            try {
                int id = Integer.parseInt(s);
                if (!p.deleteActivity(id)) {
                    mostraErrore("ERRORE", "Non è stato possibile cancellare l'attività");
                } else {
                    mostraSuccesso("CANCELLAZIONE EFFETTUATA", "Attività cancellata con successo!");
                    riempiTabella();
                }
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "Inserisci un ID valido", "ERRORE", ERROR_MESSAGE);
            }
        }

    }//GEN-LAST:event_buttonCancellaAttivitàActionPerformed


    private void buttonMostraAttivitàActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonMostraAttivitàActionPerformed
        panelCopertura.setVisible(false);

        buttonModificaAttività.setVisible(true);
        buttonAssegna.setVisible(true);
        svuotaTabella(tb);
        riempiTabella();
        if (tb.getRowCount() == 0) {
            mostraErrore("ERRORE", "Nessuna attività trovata");
        }
    }//GEN-LAST:event_buttonMostraAttivitàActionPerformed

    private void fieldIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldIDActionPerformed

    private void buttonRimuoviMaterialeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRimuoviMaterialeActionPerformed
        if (listaMateriali.getSelectedIndex() == -1) {
            mostraErrore("ERROR", "Seleziona un materiale dalla lista dei materiali da rimuovere");
        } else {
            materiali.remove(listaMateriali.getSelectedValue());
            listModel.removeElement(listaMateriali.getSelectedValue());
            listaMateriali.setModel(listModel);
        }
    }//GEN-LAST:event_buttonRimuoviMaterialeActionPerformed

    private void buttonModificaAttivitàActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonModificaAttivitàActionPerformed

        labelAttivitàOra.setText(("(Now is"));
        labelTipologiaOra.setText(("(Now is"));
        labelInterrompibileOra.setText(("(Now is"));
        labelInterrompibileOra.setVisible(true);
        labelAttivitàOra.setVisible(true);
        labelTipologiaOra.setVisible(true);
        int indice = tabellaAttività.getSelectedRow();
        listModel.clear();
        if (indice == -1) {
            mostraErrore("ERRORE", "Seleziona una riga dalla tabella!");
        } else {
            if (!tabellaAttività.getValueAt(tabellaAttività.getSelectedRow(), 6).equals("EWO")) {
                disabilitaDay();
                fieldWeek.setEnabled(true);
            } else {
                fieldWeek.setEnabled(false);
                fieldDay.setVisible(true);
                labelDay.setVisible(true);
            }
            creazioneAttività.setVisible(true);
            buttonModificaAttività.setEnabled(true);
            labelTipologiaOra.setEnabled(true);
            labelAttivitàOra.setEnabled(true);
            labelInterrompibileOra.setEnabled(true);
            fieldID.setEnabled(false);
            labelID.setEnabled(false);
            creazioneAttività.setTitle(("Modifica Attività"));
            buttonCrea.setText("MODIFICA ATTIVITA'");
            buttonCreaAttività.setEnabled(false);
            id = Integer.parseInt(tb.getValueAt(tabellaAttività.getSelectedRow(), 0).toString());
            Activity a = p.getActivity(id);
            materiali = a.getMaterials();
            String tipo = "";
            switch (a.getType()) {
                case 0:
                    tipo = "Planned";
                    break;
                case 1:
                    tipo = "EWO";
                    break;
                default:
                    tipo = "Extra";
                    break;
            }
            fieldID.setText(String.valueOf(a.getId()));
            labelAttivitàOra.setText(labelAttivitàOra.getText() + " " + tipo.toLowerCase() + ")");
            fieldFactorySite.setText(a.getFactorySite());
            fieldArea.setText(a.getArea());
            labelTipologiaOra.setText((labelTipologiaOra.getText()) + " " + a.getTypology().toLowerCase() + ")");
            fieldTime.setText(String.valueOf(a.getEstimatedTime()));
            fieldWeek.setText(String.valueOf(a.getWeek()));
            labelInterrompibileOra.setText(labelInterrompibileOra.getText() + " " + a.isInterruptable() + ")");
            textAreaDescrizioneAttività.setText(a.getActivityDescription());
            textAreaWorkspace.setText(a.getWorkSpaceNote());
            for (String m : a.getMaterials()) {
                listModel.addElement(m);
            }
            listaMateriali.setModel(listModel);
        }

    }//GEN-LAST:event_buttonModificaAttivitàActionPerformed

    private void creazioneAttivitàWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_creazioneAttivitàWindowClosing
        buttonModificaAttività.setEnabled(true);
        if (buttonCrea.getText().equals(("MODIFICA ATTIVITA'"))) {
            riempiTabella();
        }
        buttonCrea.setText("ATTIVITA'");
        buttonCreaAttività.setEnabled(true);
        svuota();

    }//GEN-LAST:event_creazioneAttivitàWindowClosing

    private void buttonSMPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSMPActionPerformed
        id = Integer.parseInt(tb.getValueAt(tabellaAttività.getSelectedRow(), 0).toString());
        Activity a = p.getActivity(id);
        if (a.getProcedure() == null) {
            mostraErrore("ERRORE", "Nessun SMP associato alla procedura");
        } else {
            try {
                Desktop.getDesktop().open(a.getProcedure().getSmp());
            } catch (IOException ex) {
                mostraErrore("ERRORE", "File non trovato");
            }

        }

        // TODO add your handling code here:
    }//GEN-LAST:event_buttonSMPActionPerformed

    private void tabellaAttivitàMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabellaAttivitàMouseClicked
        panelCopertura2.setVisible(false);
        listModelVis.clear();
        listModelComp.clear();
        DefaultTableModel tb = (DefaultTableModel) tabellaAttività.getModel();
        listaCompetenze.setModel(listModelComp);
        listaMaterialiVis.setModel(listModel);
        int indice = tabellaAttività.getSelectedRow();
        if (indice == -1) {
            mostraErrore("ERRORE", "Seleziona una riga dalla tabella!");
        } else if(tabellaAttività.getValueAt(tabellaAttività.getSelectedRow(), 6).equals("EWO")){
            attivitàEWO.setVisible(true);
            id =  Integer.parseInt(tb.getValueAt(tabellaAttività.getSelectedRow(), 0).toString());
            Activity a = p.getActivity(id);
            jLabelWeek2.setText(jLabelWeek2.getText() + " " + String.valueOf(a.getWeek()));
            textFieldActivityToAssign2.setText(id + " - " + a.getFactorySite() + " - " + a.getArea() + " - " + a.getTypology());
            jTextAreaWorkspacenotesewo.setText(String.valueOf(a.getWorkSpaceNote()));
            jTextAreaDescriptionewo.setText(String.valueOf(a.getActivityDescription()));
            textFieldEstimatedtimeewo.setText(String.valueOf(a.getEstimatedTime()));
            jListSkillsneededewo.setModel(listModelSkillsEwo);
            List<String> skills = p.getAllSkills();
            for(String s : skills){
                listModelSkillsEwo.addElement(s);
            }
            }
        
        else{
            abilitaVis();
            id = Integer.parseInt(tb.getValueAt(tabellaAttività.getSelectedRow(), 0).toString());
            Activity a = p.getActivity(id);
            textAreaDescrizioneAttivitàVis.setText(a.getActivityDescription());
            textAreaWorkspaceNotesVis.setText(a.getWorkSpaceNote());
            List<String> materiali = a.getMaterials();
            for (String m : materiali) {
                listModelVis.addElement(m);
            }
            listaMaterialiVis.setModel(listModelVis);
            if (a.getProcedure() != null) {
                List<String> competenze = a.getProcedure().getCompetencies();
                for (String c : competenze) {
                    listModelComp.addElement("·" + c);
                }
            }
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_tabellaAttivitàMouseClicked

    private void buttonAssegnaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAssegnaActionPerformed

        int indice = tabellaAttività.getSelectedRow();
        if (indice == -1) {
            mostraErrore("ERRORE", "Seleziona un'attività dalla tabella!");
        } else {

            svuotaTabella(tb2);
            assegnaAttività.setTitle(("Disponibilità manutentori settimana " + tabellaAttività.getValueAt(tabellaAttività.getSelectedRow(), 5)));
            tabellaDisponibilità.getColumnModel().setSelectionModel(new DefaultListSelectionModel() {
                private boolean isSelectable(int indice) {
                    return !(indice == 1 || indice == 0);
                }

                @Override
                public void setSelectionInterval(int indice1, int indice2) {
                    if (isSelectable(indice2) && isSelectable(indice1)) {
                        super.setSelectionInterval(indice1, indice2);
                    } else {
                    }
                }

                @Override
                public void addSelectionInterval(int indice1, int indice2) {
                    if (isSelectable(indice1) && isSelectable(indice2)) {
                        super.addSelectionInterval(indice1, indice2);
                    }
                }

            });
            tabellaDisponibilità.setCellSelectionEnabled(true);
            Activity a = p.getActivity(id);
            listModelSkills.clear();
            if (a.getProcedure() != null) {
                List<String> competenze = a.getProcedure().getCompetencies();
                competenze.forEach(c -> {
                    listModelSkills.addElement("·" + c);
                });
            }

            listaSkills.setModel(listModelSkills);
            textWeekAssegnata.setText(String.valueOf(a.getWeek()));
            textAttivitàDaAssegnare.setText(id + " - " + a.getFactorySite() + " - " + a.getArea() + " - " + a.getTypology() + " - " + a.getEstimatedTime() + " mins");

            aggiornaTabella2();

            if (tb2.getRowCount() == 0) {
                mostraErrore("ERRORE", "Nessun manutentore disponibile nella settimana " + a.getWeek());
                assegnaAttività.setVisible(false);
            } else {
                assegnaAttività.setVisible(true);
            }
        }
    }//GEN-LAST:event_buttonAssegnaActionPerformed

    private void textWeekAssegnataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textWeekAssegnataActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textWeekAssegnataActionPerformed

    private void textAttivitàDaAssegnareActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textAttivitàDaAssegnareActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textAttivitàDaAssegnareActionPerformed

    private void tabellaDisponibilitàMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabellaDisponibilitàMouseClicked

        // TODO add your handling code here:
    }//GEN-LAST:event_tabellaDisponibilitàMouseClicked

    private void jButtonAssegnaAttività2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAssegnaAttività2ActionPerformed
        int indice = tabellaDisponibilità.getSelectedColumn();
        int colonna = tabellaDisponibilità.getSelectedColumn();
        int riga = tabellaDisponibilità.getSelectedRow();
        if (indice == -1) {
            mostraErrore("ERRORE", "Selezionare un giorno dalla tabella!");
        } else if (tabellaDisponibilità.getValueAt(riga, colonna).equals("0%")) {
            mostraErrore("ERRORE", "Il manutentore non ha disponibilità quel giorno, seleziona un altro giorno!");
        } else {
            resettaLabelDisp();
            textAreaWorkspaceNotes2.setEditable(false);
            tabellaDisponibilità2.getColumnModel().setSelectionModel(new DefaultListSelectionModel() {
                private boolean isSelectable(int indice) {
                    return !(indice == 1 || indice == 0);
                }

                @Override
                public void setSelectionInterval(int indice1, int indice2) {
                    if (isSelectable(indice2) && isSelectable(indice1)) {
                        super.setSelectionInterval(indice1, indice2);
                    } else {
                    }
                }

                @Override
                public void addSelectionInterval(int indice1, int indice2) {
                    if (isSelectable(indice1) && isSelectable(indice2)) {
                        super.addSelectionInterval(indice1, indice2);
                    }
                }

            });

            assegnaAttività2.setVisible(true);
            tabellaDisponibilità.setEnabled(false);
            Activity a = p.getActivity(id);
            assegnaAttività2.setTitle("Disponibilità di " + tabellaDisponibilità.getValueAt(tabellaDisponibilità.getSelectedRow(), 0) + " "
                    + "nel giorno  " + tb2.getColumnName(tabellaDisponibilità.getSelectedColumn()).toLowerCase());
            textAreaWorkspaceNotes2.setText(String.valueOf(a.getWorkSpaceNote()));
            labelWeekDisp.setText(labelWeekDisp.getText() + " " + String.valueOf(a.getWeek()));
            labelDayDisp.setText(labelDayDisp.getText() + " " + tabellaDisponibilità.getColumnName(colonna));
            labelDisponibilità.setText((labelDisponibilità.getText()) + " " + tabellaDisponibilità.getValueAt(riga, 0) + " "
                    + tabellaDisponibilità.getValueAt(riga, colonna));
            jTextFieldActivityToAssign2.setText(id + " - " + a.getFactorySite() + " - " + a.getArea() + " - "
                    + a.getTypology() + " - " + a.getEstimatedTime() + " mins");

            tabellaDisponibilità2.setCellSelectionEnabled(true);
            svuotaTabella(tb3);
            tabellaDisponibilità2.setRowHeight(50);
            aggiornaTabella3();

        }

    }//GEN-LAST:event_jButtonAssegnaAttività2ActionPerformed

    private void tabellaDisponibilitàMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabellaDisponibilitàMouseReleased

    }//GEN-LAST:event_tabellaDisponibilitàMouseReleased

    private void buttonForwardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonForwardActionPerformed

        int riga = tabellaDisponibilità.getSelectedRow();
        int[] oreSelezionate = tabellaDisponibilità2.getSelectedColumns();

        for (int i = 0; i < oreSelezionate.length; i++) {
            oreSelezionate[i] -= 2;

        }

        try {
            p.assignedActivityToMaintainer(p.getAllMaintainers().get(riga), p.getActivity(id), tabellaDisponibilità.getSelectedColumn() - 2, oreSelezionate);
            mostraSuccesso("Attività assegnata!", "Attività assegnata con successo");
            aggiornaTabella2();
            assegnaAttività2.setVisible(false);
            tabellaDisponibilità.setEnabled(true);
        } catch (Exception ex) {
            mostraErrore("ERRORE", ex.getMessage());
        }


    }//GEN-LAST:event_buttonForwardActionPerformed

    private void GestioneAttivitàWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_GestioneAttivitàWindowClosing
        svuotaTabella(tb);        // TODO add your handling code here:
    }//GEN-LAST:event_GestioneAttivitàWindowClosing

    private void assegnaAttività2WindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_assegnaAttività2WindowClosing
        tabellaDisponibilità.setEnabled(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_assegnaAttività2WindowClosing

    private void jButtonConfermaewoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonConfermaewoActionPerformed
           
            
            
    }//GEN-LAST:event_jButtonConfermaewoActionPerformed

    private void aggiungiSkillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aggiungiSkillActionPerformed
        
        
    }//GEN-LAST:event_aggiungiSkillActionPerformed
    private void tendinaTipoAttivitàItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_tendinaTipoAttivitàItemStateChanged
        if (tendinaTipoAttività.getSelectedItem().equals("EWO")) {
            labelWeek.setEnabled(false);
            fieldWeek.setEnabled(false);
            fieldDay.setVisible(true);
            labelDay.setVisible(true);
            Calendar cal = Calendar.getInstance();

            fieldDay.setText(giorno);
            fieldWeek.setText(String.valueOf(52 - Calendar.WEEK_OF_YEAR));

        } else {
            if (!buttonCrea.getText().equals(("MODIFICA ATTIVITA'"))) {
                labelWeek.setEnabled(true);
                fieldWeek.setEnabled(true);
                fieldDay.setVisible(false);
                labelDay.setVisible(false);
                fieldWeek.setText("");
                fieldDay.setText("");
            } else {
                labelWeek.setEnabled(true);
                fieldWeek.setEnabled(true);
                fieldDay.setVisible(false);
                labelDay.setVisible(false);
                fieldWeek.setText(String.valueOf(p.getActivity(id).getWeek()));
                fieldDay.setText("");
            }
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_tendinaTipoAttivitàItemStateChanged

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InterfacciaGrafica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InterfacciaGrafica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InterfacciaGrafica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InterfacciaGrafica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new InterfacciaGrafica().setVisible(true);
            }
        });
    }

    private void svuota() {
        materiali.clear();
        fieldID.setText("");
        fieldFactorySite.setText("");
        fieldTime.setText("");
        fieldWeek.setText("");
        textAreaDescrizioneAttività.setText("");
        textAreaWorkspace.setText("");
        listModel.clear();

        fieldArea.setText("");
    }

    private void disattivaVis() {
        togliBordi();
        buttonSMP.setVisible(false);
        labelWO.setVisible(false);
        labelDE.setVisible(false);
        labelML.setVisible(false);
        labelCO.setVisible(false);
        textAreaDescrizioneAttivitàVis.setVisible(false);
        textAreaWorkspaceNotesVis.setVisible(false);
        listaMaterialiVis.setVisible(false);
        listaCompetenze.setVisible(false);

    }

    private Activity buildActivity(String tipoAttività) {
        Activity a;
        boolean b;
        if (tendinaInterrompibile.getSelectedItem().toString().equals("Si")) {
            b = true;
        } else {
            b = false;
        }
        try {

            switch (tipoAttività) {
                case "Planned":
                    a = new PlannedActivity(Integer.parseInt(fieldID.getText()), fieldFactorySite.getText(), fieldArea.getText(),
                            tendinaTipologia.getSelectedItem().toString(),
                            textAreaDescrizioneAttività.getText(), Integer.parseInt(fieldTime.getText()),
                            Integer.parseInt(fieldWeek.getText()), materiali, b, textAreaWorkspace.getText(), null);
                    break;
                case "EWO":
                    a = new EwoActivity(Integer.parseInt(fieldID.getText()), fieldFactorySite.getText(), fieldArea.getText(),
                            tendinaTipologia.getSelectedItem().toString(),
                            textAreaDescrizioneAttività.getText(), Integer.parseInt(fieldTime.getText()),
                            Integer.parseInt(fieldWeek.getText()), materiali, b, textAreaWorkspace.getText(),2);
                    break;
                default:
                    a = new ExtraActivity(Integer.parseInt(fieldID.getText()), fieldFactorySite.getText(), fieldArea.getText(),
                            tendinaTipologia.getSelectedItem().toString(),
                            textAreaDescrizioneAttività.getText(), Integer.parseInt(fieldTime.getText()),
                            Integer.parseInt(fieldWeek.getText()), materiali, b, textAreaWorkspace.getText(), null);
                    break;
            }
        } catch (NumberFormatException e) {

            return null;
        }
        return a;
    }

    private void abilitaVis() {
        aggiungiBordi();
        buttonSMP.setVisible(true);
        labelWO.setVisible(true);
        labelDE.setVisible(true);
        labelML.setVisible(true);
        labelCO.setVisible(true);
        textAreaDescrizioneAttivitàVis.setVisible(true);
        textAreaWorkspaceNotesVis.setVisible(true);
        listaMaterialiVis.setVisible(true);
        listaCompetenze.setVisible(true);

    }

    private void riempiTabella() {
        svuotaTabella(tb);
        String[] nomi = {"ID", "Factory Site", "Area", "Typology", "Estimated Time", "Week", "Tipo", "Interrompibile"};
        tb.setColumnIdentifiers(nomi);
        tabellaAttività.setModel(tb);
        List<Activity> a;
        a = p.getAllActivities();
        for (Activity x : a) {
            switch (x.getType()) {
                case 0:
                    tipo = "Planned";
                    break;
                case 1:
                    tipo = "EWO";
                    break;
                default:
                    tipo = "Extra";
                    break;
            }
            if (x.isInterruptable() == true) {
                interrompibile = "Si";
            } else {
                interrompibile = "No";
            }

            String[] inserimento = {String.valueOf(x.getId()), x.getFactorySite(), x.getArea(), x.getTypology(),
                String.valueOf(x.getEstimatedTime()), String.valueOf(x.getWeek()), tipo, interrompibile};
            tb.addRow(inserimento);
        }
    }

    private String[] calcolaPercentuale(int m[][]) {
        String[] percentuali = new String[7];
        float sum = 0;
        for (int i = 0; i <= 6; i++) {
            for (int j = 0; j <= 6; j++) {
                sum += m[i][j];
            }

            percentuali[i] = String.valueOf((int) (sum / 420 * 100)) + "%";
            sum = 0;

        }

        return percentuali;
    }

    private String contaCompetenze(List<String> competenzeAttività, List<String> competenzeMaintainer) {
        int count = 0;
        for (String c : competenzeAttività) {
            if (competenzeMaintainer.contains(c)) {
                count++;
            }
        }
        return count + "/" + competenzeAttività.size();
    }

    private void aggiungiBordi() {
        jScrollPane8.setBorder(BorderFactory.createLineBorder(black));
        jScrollPane7.setBorder(BorderFactory.createLineBorder(black));
        jScrollPane5.setBorder(BorderFactory.createLineBorder(black));
        jScrollPane4.setBorder(BorderFactory.createLineBorder(black));
        jScrollPane3.setBorder(BorderFactory.createLineBorder(black));
    }

    private void togliBordi() {
        jScrollPane8.setBorder(null);
        jScrollPane7.setBorder(null);
        jScrollPane5.setBorder(null);
        jScrollPane4.setBorder(null);
        jScrollPane3.setBorder(null);

    }

    private void mostraErrore(String titolo, String messaggio) {
        JOptionPane.showMessageDialog(null, messaggio, titolo, ERROR_MESSAGE);
    }

    private void mostraSuccesso(String titolo, String messaggio) {
        JOptionPane.showMessageDialog(null, messaggio, titolo, INFORMATION_MESSAGE);
    }

    private String getComp(Activity a, Maintainer m) {
        String competenze;
        if (a.getProcedure() != null) {
            competenze = contaCompetenze(a.getProcedure().getCompetencies(), m.getCompetencies());
        } else // Se non è associata una procedura all'attività
        {
            competenze = "0/0";
        }
        return competenze;
    }

    private void svuotaTabella(DefaultTableModel tb) {
        while (tb.getRowCount() > 0) {
            tb.removeRow(0);
        }
    }

    private void resettaLabelDisp() {
        labelWeekDisp.setText("WEEK:");
        labelDayDisp.setText("DAY:");
        labelDisponibilità.setText("AVAILABILITY OF");
    }

    private void aggiornaTabella3() {
        Activity a = p.getActivity(id);
        Maintainer m = p.getAllMaintainers().get(tabellaDisponibilità.getSelectedRow());
        int[][] disponibilità = m.getAvailability().get(a.getWeek());
        int[] ore;
        if (disponibilità == null) {
            ore = new int[7];
        } else {
            ore = disponibilità[tabellaDisponibilità.getSelectedColumn() - 2];
        }
        String[] nomi = {"Maintainer", "Skills", "08:00 to 9:00", "09:00 to 10:00", "10:00 to 11:00", "11:00 to 12:00", "12:00 to 13:00", "13:00 to 14:00", "14:00 to 15:00"};
        tb3.setColumnIdentifiers(nomi);
        String competenze = getComp(a, m);
        String[] inserimento = {m.getName(), competenze, String.valueOf(ore[0]) + " min",
            String.valueOf(ore[1]) + " min", String.valueOf(ore[2]) + " min",
            String.valueOf(ore[3]) + " min", String.valueOf(ore[4]) + " min",
            String.valueOf(ore[5]) + " min", String.valueOf(ore[6]) + " min"};
        tb3.addRow(inserimento);
        tabellaDisponibilità2.setModel(tb3);

    }

    private void aggiornaTabella2() {
        svuotaTabella(tb2);
        Activity a = p.getActivity(id);
        String[] nomi = {"Maintainer", "Skills", "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"};
        tb2.setColumnIdentifiers(nomi);
        tabellaDisponibilità.setModel(tb2);
        List<Maintainer> maintainers = p.getAllMaintainers();
        for (Maintainer m : maintainers) {
            int matrice[][] = m.getAvailability().get(a.getWeek());
            if (matrice != null) {
                String competenze = getComp(a, m);
                String[] percentuali = calcolaPercentuale(matrice);
                String[] inserimento = {m.getName(), competenze, percentuali[0], percentuali[1], percentuali[2], percentuali[3], percentuali[4], percentuali[5], percentuali[6]};
                tb2.addRow(inserimento);
            }
        }

    }

    private void disabilitaDay() {
        fieldDay.setVisible(false);
        labelDay.setVisible(false);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFrame GestioneAttività;
    private javax.swing.JButton aggiungiSkill;
    private javax.swing.JFrame assegnaAttività;
    private javax.swing.JFrame assegnaAttività2;
    private javax.swing.JFrame attivitàEWO;
    private javax.swing.JButton buttonAggiungiMateriale;
    private javax.swing.JButton buttonAssegna;
    private javax.swing.JButton buttonCancellaAttività;
    private javax.swing.JButton buttonCrea;
    private javax.swing.JButton buttonCreaAttività;
    private javax.swing.JButton buttonForward;
    private javax.swing.JButton buttonGestManut;
    private javax.swing.JButton buttonModificaAttività;
    private javax.swing.JButton buttonMostraAttività;
    private javax.swing.JButton buttonRimuoviMateriale;
    private javax.swing.JButton buttonSMP;
    private javax.swing.JFrame creazioneAttività;
    private javax.swing.JTextField fieldArea;
    private javax.swing.JTextField fieldDay;
    private javax.swing.JTextField fieldFactorySite;
    private javax.swing.JTextField fieldID;
    private javax.swing.JTextField fieldTime;
    private javax.swing.JTextField fieldWeek;
    private javax.swing.JButton jButtonAssegnaAttività2;
    private javax.swing.JButton jButtonConfermaewo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelDay2;
    private javax.swing.JLabel jLabelWeek2;
    private javax.swing.JList<String> jListSkillsneededewo;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane14;
    private javax.swing.JScrollPane jScrollPane15;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTextArea jTextAreaDescriptionewo;
    private javax.swing.JTextArea jTextAreaWorkspacenotesewo;
    private javax.swing.JTextField jTextFieldActivityToAssign2;
    private javax.swing.JLabel labelAttivitàOra;
    private javax.swing.JLabel labelCO;
    private javax.swing.JLabel labelDE;
    private javax.swing.JLabel labelDay;
    private javax.swing.JLabel labelDayDisp;
    private javax.swing.JLabel labelDisponibilità;
    private javax.swing.JLabel labelID;
    private javax.swing.JLabel labelInterrompibileOra;
    private javax.swing.JLabel labelML;
    private javax.swing.JLabel labelTipologiaOra;
    private javax.swing.JLabel labelWO;
    private javax.swing.JLabel labelWeek;
    private javax.swing.JLabel labelWeekDisp;
    private javax.swing.JList<String> listaCompetenze;
    private javax.swing.JList<String> listaMateriali;
    private javax.swing.JList<String> listaMaterialiVis;
    private javax.swing.JList<String> listaSkills;
    private javax.swing.JPanel panelCopertura;
    private javax.swing.JPanel panelCopertura2;
    private javax.swing.JPanel panelDX;
    private javax.swing.JPanel panelSX;
    private javax.swing.JTable tabellaAttività;
    private javax.swing.JTable tabellaDisponibilità;
    private javax.swing.JTable tabellaDisponibilità2;
    private javax.swing.JComboBox<String> tendinaInterrompibile;
    private javax.swing.JComboBox<String> tendinaMateriali;
    private javax.swing.JComboBox<String> tendinaTipoAttività;
    private javax.swing.JComboBox<String> tendinaTipologia;
    private javax.swing.JTextArea textAreaDescrizioneAttività;
    private javax.swing.JTextArea textAreaDescrizioneAttivitàVis;
    private javax.swing.JTextArea textAreaWorkspace;
    private javax.swing.JTextArea textAreaWorkspaceNotes2;
    private javax.swing.JTextArea textAreaWorkspaceNotesVis;
    private javax.swing.JTextField textAttivitàDaAssegnare;
    private javax.swing.JTextField textFieldActivityToAssign2;
    private javax.swing.JTextField textFieldEstimatedtimeewo;
    private javax.swing.JTextField textWeekAssegnata;
    // End of variables declaration//GEN-END:variables
}
